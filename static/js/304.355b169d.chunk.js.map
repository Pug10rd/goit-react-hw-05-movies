{"version":3,"file":"static/js/304.355b169d.chunk.js","mappings":"6KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,gKC5CaE,EAAYC,EAAAA,GAAAA,IAAH,sBAETC,EAAYD,EAAAA,GAAAA,GAAH,wRAaTE,EAAYF,EAAAA,GAAAA,GAAH,mZ,GAiBIA,EAAAA,GAAAA,IAAH,sCAIEA,EAAAA,GAAAA,EAAH,wB,QCItB,MArCA,WACE,OAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACGT,EAAAA,EAAAA,eADH,OACZU,EADY,OAElBH,EAAaG,EAAOjB,KAAKkB,SAFP,2CAAH,qDAIjBF,GACD,GAAE,KAGD,0BACE,6BACE,4CACA,SAACR,EAAD,WACE,SAACE,EAAD,UACGG,EAAUM,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOhB,EAAsB,EAAtBA,GAAIiB,EAAkB,EAAlBA,YAC3B,OACE,SAACV,EAAD,WACE,UAAC,KAAD,CAAMW,GAAE,iBAAYlB,GAApB,WACE,gBACEmB,IAAG,yCAAoCF,EAApC,KACHG,IAAKJ,KAEP,uBAAIA,QANQhB,EAUnB,YAMZ,C","sources":["api/moviesApi.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `5f12ce2f6624da9aebe9b51df2b716a0`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;","import styled from 'styled-components';\n\nexport const TrendWrap = styled.div``;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  text-decoration: none;\n  flex-direction: column;\n  flex-basis: 100%;\n  display: flex;\n  border: 1px solid gray;\n\n  &:hover,\n  &:focus {\n    display: block;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    transition-duration: 250ms;\n    transition-timing-function: $timing-function;\n  }\n`;\n\nexport const MovieImage = styled.img`\nwidth: 100%;\n`;\n\nexport const MovieText = styled.p`\n`;","import api from '../../api/moviesApi';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TrendWrap, MovieList, MovieItem } from './Home.styled';\n\nfunction Home() {\n  const [moviesDay, setMoviesDay] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const result = await api.getMoviesDay();\n      setMoviesDay(result.data.results);\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <main>\n        <h1>Trending today</h1>\n        <TrendWrap>\n          <MovieList>\n            {moviesDay.map(({ title, id, poster_path }) => {\n              return (\n                <MovieItem key={id}>\n                  <Link to={`movies/${id}`}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300${poster_path} `}\n                      alt={title}\n                    />\n                    <p>{title}</p>\n                  </Link>\n                </MovieItem>\n              );\n            })}\n          </MovieList>\n        </TrendWrap>\n      </main>\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","TrendWrap","styled","MovieList","MovieItem","useState","moviesDay","setMoviesDay","useEffect","fetchMovies","result","results","map","title","poster_path","to","src","alt"],"sourceRoot":""}